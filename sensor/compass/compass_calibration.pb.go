// Code generated by protoc-gen-go. DO NOT EDIT.
// source: compass_calibration.proto

package compass

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CompassCalibration struct {
	OffsetX              float64  `protobuf:"fixed64,1,opt,name=offset_x,json=offsetX,proto3" json:"offset_x,omitempty"`
	OffsetY              float64  `protobuf:"fixed64,2,opt,name=offset_y,json=offsetY,proto3" json:"offset_y,omitempty"`
	OffsetZ              float64  `protobuf:"fixed64,3,opt,name=offset_z,json=offsetZ,proto3" json:"offset_z,omitempty"`
	GainX                float64  `protobuf:"fixed64,4,opt,name=gain_x,json=gainX,proto3" json:"gain_x,omitempty"`
	GainY                float64  `protobuf:"fixed64,5,opt,name=gain_y,json=gainY,proto3" json:"gain_y,omitempty"`
	GainZ                float64  `protobuf:"fixed64,6,opt,name=gain_z,json=gainZ,proto3" json:"gain_z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CompassCalibration) Reset()         { *m = CompassCalibration{} }
func (m *CompassCalibration) String() string { return proto.CompactTextString(m) }
func (*CompassCalibration) ProtoMessage()    {}
func (*CompassCalibration) Descriptor() ([]byte, []int) {
	return fileDescriptor_compass_calibration_05cc346450359961, []int{0}
}
func (m *CompassCalibration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CompassCalibration.Unmarshal(m, b)
}
func (m *CompassCalibration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CompassCalibration.Marshal(b, m, deterministic)
}
func (dst *CompassCalibration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CompassCalibration.Merge(dst, src)
}
func (m *CompassCalibration) XXX_Size() int {
	return xxx_messageInfo_CompassCalibration.Size(m)
}
func (m *CompassCalibration) XXX_DiscardUnknown() {
	xxx_messageInfo_CompassCalibration.DiscardUnknown(m)
}

var xxx_messageInfo_CompassCalibration proto.InternalMessageInfo

func (m *CompassCalibration) GetOffsetX() float64 {
	if m != nil {
		return m.OffsetX
	}
	return 0
}

func (m *CompassCalibration) GetOffsetY() float64 {
	if m != nil {
		return m.OffsetY
	}
	return 0
}

func (m *CompassCalibration) GetOffsetZ() float64 {
	if m != nil {
		return m.OffsetZ
	}
	return 0
}

func (m *CompassCalibration) GetGainX() float64 {
	if m != nil {
		return m.GainX
	}
	return 0
}

func (m *CompassCalibration) GetGainY() float64 {
	if m != nil {
		return m.GainY
	}
	return 0
}

func (m *CompassCalibration) GetGainZ() float64 {
	if m != nil {
		return m.GainZ
	}
	return 0
}

func init() {
	proto.RegisterType((*CompassCalibration)(nil), "compass.CompassCalibration")
}

func init() {
	proto.RegisterFile("compass_calibration.proto", fileDescriptor_compass_calibration_05cc346450359961)
}

var fileDescriptor_compass_calibration_05cc346450359961 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0xce, 0xcf, 0x2d,
	0x48, 0x2c, 0x2e, 0x8e, 0x4f, 0x4e, 0xcc, 0xc9, 0x4c, 0x2a, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0xd3,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x4a, 0x29, 0xad, 0x62, 0xe4, 0x12, 0x72, 0x86,
	0xb0, 0x9d, 0x11, 0xaa, 0x84, 0x24, 0xb9, 0x38, 0xf2, 0xd3, 0xd2, 0x8a, 0x53, 0x4b, 0xe2, 0x2b,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x18, 0x83, 0xd8, 0x21, 0xfc, 0x08, 0x24, 0xa9, 0x4a, 0x09, 0x26,
	0x64, 0xa9, 0x48, 0x24, 0xa9, 0x2a, 0x09, 0x66, 0x64, 0xa9, 0x28, 0x21, 0x51, 0x2e, 0xb6, 0xf4,
	0xc4, 0xcc, 0xbc, 0xf8, 0x0a, 0x09, 0x16, 0xb0, 0x04, 0x2b, 0x88, 0x17, 0x01, 0x17, 0xae, 0x94,
	0x60, 0x45, 0x08, 0x47, 0xc2, 0x85, 0xab, 0x24, 0xd8, 0x10, 0xc2, 0x51, 0x49, 0x6c, 0x60, 0xc7,
	0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x81, 0x69, 0xfa, 0x07, 0xd9, 0x00, 0x00, 0x00,
}
